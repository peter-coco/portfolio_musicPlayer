{"version":3,"sources":["component/footer/Footer.tsx","component/sidebar/SideBar.tsx","component/navbar/searchbar/SearchBar.tsx","component/navbar/navBar.tsx","component/main/musiclist/subOperation/subOperation.tsx","component/main/musiclist/musicList.tsx","App.tsx","component/main/main.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","playBarActivate","playBarMusicInfor","checkClickThumbsUp","setplayBarMusicInfor","useState","playNpauseToggle","setPlayNpauseToggle","musicTime","setMusicTime","pauseMusic","setPauseMusic","totalTime","setTotalTime","useEffect","time","timer","setInterval","pre","clearInterval","fetch","then","e","json","i","res","length","title","playNPauseToggleFunc","useCallback","style","display","id","width","className","src","albumCover","artist","album","parseInt","String","likes","views","onClick","RankSideBar","setSearchInput","setSortType","setGenreType","rankSideBarActivate","selectSidebarMenu","input","genre","sort","SortType","VIEWS","LIKES","SearchBar","inputText","setInputText","clickSearchFunc","type","onChange","event","target","value","PlayerNav","setLibraryType","setRankSideBarActivate","homeBarToggle","setHomeBarToggle","rankSideBarToggle","setRankSideBarToggle","libraryBarToggle","setLibraryBarToggle","selectHomeMenuFunc","selectChartMenuFunc","selectLibraryMenuFunc","console","log","color","MusicSubOperation","music","setplayBarActivate","setMusicList","operationActivate","checkClickLibrary","setCheckClickLibrary","playBarToggle","setPlayBarToggle","playBarToggleFunc","addLibraryFunc","method","headers","body","JSON","stringify","lib","response","deleteLibraryFunc","visibility","clipPath","height","overflow","transition","MusicInfor","setCheckClickThumbsUp","setOperationActivate","handleClick","isLike","subMenuClickToggleFunc","area","Math","floor","onOutsideClick","Main","sortType","searchInput","libraryType","musicList","filter","el","includes","library","a","b","ALBUMS","localeCompare","ARTISTS","TITLES","map","MusicPlayer","genreType","App","backgroundImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73baf8a2.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { Music } from \"../../App\";\r\nimport \"./Footer.css\";\r\n\r\nexport function Footer({\r\n  playBarActivate,\r\n  playBarMusicInfor,\r\n  checkClickThumbsUp,\r\n  setplayBarMusicInfor,\r\n}: {\r\n  playBarActivate: boolean;\r\n  playBarMusicInfor: Music;\r\n  checkClickThumbsUp: boolean;\r\n  setplayBarMusicInfor: Function;\r\n}) {\r\n  const [playNpauseToggle, setPlayNpauseToggle] = useState(false);\r\n  const [musicTime, setMusicTime] = useState(0);\r\n  const [pauseMusic, setPauseMusic] = useState(false);\r\n  const [totalTime, setTotalTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (playBarMusicInfor) {\r\n      setTotalTime(playBarMusicInfor.time);\r\n      setMusicTime(0);\r\n    }\r\n  }, [playBarMusicInfor]);\r\n\r\n  useEffect(() => {\r\n    if (playBarActivate && playBarMusicInfor && !pauseMusic) {\r\n      const timer = setInterval(() => {\r\n        setMusicTime((pre) => (pre < playBarMusicInfor.time ? pre + 1 : pre));\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [playBarActivate, pauseMusic, playBarMusicInfor]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://musicdata.link/\")\r\n      .then((e) => e.json())\r\n      .then((e) => {\r\n        // //\r\n        for (let i = 0; i < e.res.length; i++) {\r\n          if (e.res[i].title === playBarMusicInfor.title) {\r\n            setplayBarMusicInfor(e.res[i]);\r\n          }\r\n        }\r\n      });\r\n  }, [checkClickThumbsUp]);\r\n\r\n  const playNPauseToggleFunc = useCallback(() => {\r\n    setPauseMusic((pre) => !pre);\r\n    setPlayNpauseToggle((pre) => !pre);\r\n  }, [setPauseMusic, setPlayNpauseToggle]);\r\n\r\n  // const cs: CSSProperties = {\r\n  //   display: playBarActivate ? \"flex\" : \"none\",\r\n  // };\r\n\r\n  // // let cs : CSSProperties;\r\n  // // if (playBarActivate)\r\n  // //   cs = { display: \"flex\" };\r\n  // // else\r\n  // //   cs = { display: \"none\" }\r\n\r\n  return (\r\n    <footer\r\n      style={{\r\n        display: playBarActivate ? \"flex\" : \"none\",\r\n      }}\r\n      id=\"player-footer\"\r\n    >\r\n      <div id=\"song-progress-bar\">\r\n        <div\r\n          style={{\r\n            width: `${(musicTime / totalTime) * 100}%`,\r\n          }}\r\n          id=\"progress\"\r\n        ></div>\r\n      </div>\r\n      <div id=\"playingNow-wrap\">\r\n        <div className=\"playingNow\">\r\n          <img src={playBarMusicInfor.albumCover} className=\"music-cover\" />\r\n          <div className=\"music-title\">{playBarMusicInfor.title}</div>\r\n          <div className=\"music-artist\">{playBarMusicInfor.artist}</div>\r\n          <div className=\"music-album\">{playBarMusicInfor.album}</div>\r\n          <div className=\"music-playTime\">\r\n            {parseInt(String(playBarMusicInfor.time / 60))}:\r\n            {playBarMusicInfor.time % 60}\r\n          </div>\r\n          <div className=\"music-likes\">{playBarMusicInfor.likes}</div>\r\n          <div className=\"music-views\">{playBarMusicInfor.views}</div>\r\n        </div>\r\n        <div className=\"player-operation\">\r\n          {/* <i className=\"fas fa-step-backward\"></i> */}\r\n          <i\r\n            style={{ display: playNpauseToggle ? \"block\" : \"none\" }}\r\n            className=\"fas fa-play\"\r\n            onClick={playNPauseToggleFunc}\r\n          ></i>\r\n          <i\r\n            style={{ display: playNpauseToggle ? \"none\" : \"block\" }}\r\n            className=\"fas fa-pause\"\r\n            onClick={playNPauseToggleFunc}\r\n          ></i>\r\n          <i className=\"fas fa-volume-down\"></i>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { SortType } from \"../../App\";\r\nimport \"./SideBar.css\";\r\n\r\nexport function RankSideBar({\r\n  setSearchInput,\r\n  setSortType,\r\n  setGenreType,\r\n  rankSideBarActivate,\r\n}: {\r\n  setSearchInput: Function;\r\n  setSortType: Function;\r\n  setGenreType: Function;\r\n  rankSideBarActivate: boolean;\r\n}) {\r\n  const selectSidebarMenu = useCallback(\r\n    (input: string, genre: string, sort: SortType) => {\r\n      setSearchInput(input);\r\n      setGenreType(genre);\r\n      setSortType(sort);\r\n    },\r\n    [setSearchInput, setGenreType, setSortType]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{ display: rankSideBarActivate ? \"flex\" : \"none\" }}\r\n      className=\"rank-sidebar\"\r\n    >\r\n      <div\r\n        className=\"sidebar-menu\"\r\n        onClick={() => selectSidebarMenu(\"\", \"\", SortType.VIEWS)}\r\n      >\r\n        전체\r\n      </div>\r\n      <div\r\n        className=\"sidebar-pop\"\r\n        onClick={() => selectSidebarMenu(\"\", \"POP\", SortType.VIEWS)}\r\n      >\r\n        POP\r\n      </div>\r\n      <div\r\n        className=\"sidebar-kpop\"\r\n        onClick={() => selectSidebarMenu(\"\", \"KPOP\", SortType.VIEWS)}\r\n      >\r\n        K-POP\r\n      </div>\r\n      <div\r\n        className=\"sidebar-rock\"\r\n        onClick={() => selectSidebarMenu(\"\", \"ROCK\", SortType.VIEWS)}\r\n      >\r\n        ROCK\r\n      </div>\r\n      <div\r\n        className=\"sidebar-likes\"\r\n        onClick={() => selectSidebarMenu(\"\", \"\", SortType.LIKES)}\r\n      >\r\n        좋아요순\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useCallback } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nexport function SearchBar({ setSearchInput }: { setSearchInput: Function }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const clickSearchFunc = useCallback(\r\n    () => setSearchInput(inputText),\r\n    [setSearchInput, inputText]\r\n  );\r\n\r\n  return (\r\n    <div id=\"serach-bar\">\r\n      <div id=\"search-input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search-input\"\r\n          onChange={(event) => setInputText(event.target.value)}\r\n        />\r\n      </div>\r\n      <div id=\"search-icon\">\r\n        <i className=\"fas fa-search\" onClick={clickSearchFunc}></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useCallback } from \"react\";\r\nimport { SearchBar } from \"./searchbar/SearchBar\";\r\nimport { SortType } from \"../../App\";\r\nimport \"./navBar.css\";\r\n\r\nexport function PlayerNav({\r\n  setSearchInput,\r\n  setSortType,\r\n  setLibraryType,\r\n  setGenreType,\r\n  setRankSideBarActivate,\r\n}: {\r\n  setSearchInput: Function;\r\n  setSortType: Function;\r\n  setLibraryType: Function;\r\n  setGenreType: Function;\r\n  setRankSideBarActivate: Function;\r\n}) {\r\n  const [homeBarToggle, setHomeBarToggle] = useState(true);\r\n  const [rankSideBarToggle, setRankSideBarToggle] = useState(false);\r\n  const [libraryBarToggle, setLibraryBarToggle] = useState(false);\r\n\r\n  const selectHomeMenuFunc = useCallback(() => {\r\n    setSearchInput(\"\");\r\n    setGenreType(\"\");\r\n    setLibraryType(\"\");\r\n    setSortType(SortType.LIKES);\r\n\r\n    if (rankSideBarToggle) {\r\n      setRankSideBarToggle((pre) => !pre);\r\n      setRankSideBarActivate(!rankSideBarToggle);\r\n    }\r\n\r\n    if (!homeBarToggle) setHomeBarToggle((pre) => !pre);\r\n    if (libraryBarToggle) setLibraryBarToggle((pre) => !pre);\r\n  }, [\r\n    setSearchInput,\r\n    setGenreType,\r\n    setLibraryType,\r\n    setSortType,\r\n    setRankSideBarActivate,\r\n    rankSideBarToggle,\r\n    setRankSideBarToggle,\r\n    setHomeBarToggle,\r\n    homeBarToggle,\r\n    setLibraryBarToggle,\r\n    libraryBarToggle,\r\n  ]);\r\n\r\n  const selectChartMenuFunc = useCallback(() => {\r\n    setGenreType(\"\");\r\n    setLibraryType(\"\");\r\n    setSearchInput(\"\");\r\n    setSortType(SortType.VIEWS);\r\n\r\n    if (!rankSideBarToggle) {\r\n      setRankSideBarToggle((pre) => !pre);\r\n      setRankSideBarActivate(!rankSideBarToggle);\r\n    }\r\n    if (homeBarToggle) setHomeBarToggle((pre) => !pre);\r\n    if (libraryBarToggle) setLibraryBarToggle((pre) => !pre);\r\n  }, [\r\n    setSearchInput,\r\n    setGenreType,\r\n    setLibraryType,\r\n    setSortType,\r\n    setRankSideBarActivate,\r\n    rankSideBarToggle,\r\n    setRankSideBarToggle,\r\n    setHomeBarToggle,\r\n    homeBarToggle,\r\n    setLibraryBarToggle,\r\n    libraryBarToggle,\r\n  ]);\r\n\r\n  const selectLibraryMenuFunc = useCallback(() => {\r\n    setLibraryType(\"selected\");\r\n    setGenreType(\"\");\r\n\r\n    if (rankSideBarToggle) {\r\n      setRankSideBarToggle((pre) => !pre);\r\n      setRankSideBarActivate(!rankSideBarToggle);\r\n    }\r\n    if (homeBarToggle) setHomeBarToggle((pre) => !pre);\r\n    if (!libraryBarToggle) setLibraryBarToggle((pre) => !pre);\r\n  }, [\r\n    setGenreType,\r\n    setLibraryType,\r\n    setRankSideBarActivate,\r\n    rankSideBarToggle,\r\n    setRankSideBarToggle,\r\n    setHomeBarToggle,\r\n    homeBarToggle,\r\n    setLibraryBarToggle,\r\n    libraryBarToggle,\r\n  ]);\r\n\r\n  // const a = (b)=>{\r\n  //   switch(b){}\r\n  // }\r\n\r\n  console.log(rankSideBarToggle);\r\n  return (\r\n    <nav id=\"player-navBar\">\r\n      <div id=\"logo\">MUSIGRAM</div>\r\n      <div id=\"menu-bar\">\r\n        <i\r\n          style={{ color: homeBarToggle ? \"white\" : \"black\" }}\r\n          onClick={selectHomeMenuFunc}\r\n          className=\"fas fa-home\"\r\n        ></i>\r\n        <i\r\n          style={rankSideBarToggle ? { color: \"white\" } : { color: \"black\" }}\r\n          className=\"fas fa-chart-bar\"\r\n          onClick={selectChartMenuFunc}\r\n        ></i>\r\n        <i\r\n          style={libraryBarToggle ? { color: \"white\" } : { color: \"black\" }}\r\n          className=\"far fa-list-alt\"\r\n          onClick={selectLibraryMenuFunc}\r\n        />\r\n      </div>\r\n      <SearchBar setSearchInput={setSearchInput} />\r\n    </nav>\r\n  );\r\n}\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { Music } from \"../../../../App\";\r\nimport \"./subOperation.css\";\r\n\r\nexport function MusicSubOperation({\r\n  music,\r\n\r\n  setplayBarActivate,\r\n  setplayBarMusicInfor,\r\n  setMusicList,\r\n  operationActivate,\r\n  checkClickLibrary,\r\n  setCheckClickLibrary,\r\n}: {\r\n  music: Music;\r\n\r\n  setplayBarActivate: Function;\r\n  setplayBarMusicInfor: Function;\r\n  setMusicList: Function;\r\n  operationActivate: boolean;\r\n  checkClickLibrary: boolean;\r\n  setCheckClickLibrary: Function;\r\n}) {\r\n  const [playBarToggle, setPlayBarToggle] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://musicdata.link/\")\r\n      .then((e) => e.json())\r\n      .then((e) => setMusicList(e.res));\r\n  }, [checkClickLibrary]);\r\n\r\n  const playBarToggleFunc = useCallback(() => {\r\n    if (!playBarToggle) {\r\n      setplayBarActivate(!playBarToggle);\r\n      setPlayBarToggle(!playBarToggle);\r\n    }\r\n    setplayBarMusicInfor(music);\r\n  }, [\r\n    setplayBarActivate,\r\n    setPlayBarToggle,\r\n    setplayBarMusicInfor,\r\n    playBarToggle,\r\n    music,\r\n  ]);\r\n\r\n  const addLibraryFunc = useCallback(() => {\r\n    fetch(`https://musicdata.link/addLib/${music.title}`, {\r\n      method: \"POST\",\r\n      // mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        lib: \"selected\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => console.log(response));\r\n    setCheckClickLibrary(!checkClickLibrary);\r\n  }, [setCheckClickLibrary, checkClickLibrary, music]);\r\n\r\n  const deleteLibraryFunc = useCallback(() => {\r\n    fetch(`https://musicdata.link/delLib/${music.title}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => console.log(response));\r\n    setCheckClickLibrary(!checkClickLibrary);\r\n  }, [setCheckClickLibrary, checkClickLibrary, music]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        visibility: operationActivate ? \"visible\" : \"hidden\",\r\n        clipPath: operationActivate\r\n          ? \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\"\r\n          : \"polygon(0 0, 100% 0, 0 0, 0 0)\",\r\n        height: \"100px\",\r\n        overflow: \"hidden\",\r\n        transition: \"all 300ms\",\r\n      }}\r\n      className=\"music-sub-operation\"\r\n    >\r\n      <div className=\"sub-operation-menus\" onClick={playBarToggleFunc}>\r\n        재생\r\n      </div>\r\n      <div className=\"sub-operation-menus\" onClick={addLibraryFunc}>\r\n        즐겨찾기에 담기\r\n      </div>\r\n      <div className=\"sub-operation-menus\" onClick={deleteLibraryFunc}>\r\n        즐겨찾기에서 삭제\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useCallback, useState } from \"react\";\r\nimport { Music } from \"../../../App\";\r\nimport OnOutsiceClick from \"react-outclick\";\r\nimport { MusicSubOperation } from \"./subOperation/subOperation\";\r\nimport \"./musicList.css\";\r\n\r\nexport function MusicInfor({\r\n  music,\r\n  setplayBarActivate,\r\n  setplayBarMusicInfor,\r\n  setMusicList,\r\n  checkClickThumbsUp,\r\n  setCheckClickThumbsUp,\r\n  checkClickLibrary,\r\n  setCheckClickLibrary,\r\n}: {\r\n  music: Music;\r\n  setplayBarActivate: Function;\r\n  setplayBarMusicInfor: Function;\r\n  setMusicList: Function;\r\n  checkClickThumbsUp: boolean;\r\n  setCheckClickThumbsUp: Function;\r\n  checkClickLibrary: boolean;\r\n  setCheckClickLibrary: Function;\r\n}) {\r\n  const [operationActivate, setOperationActivate] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://musicdata.link/\")\r\n      .then((e) => e.json())\r\n      .then((e) => setMusicList(e.res));\r\n  }, [checkClickThumbsUp]);\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (!music.isLike) {\r\n      fetch(`https://musicdata.link/addLikes/${music.title}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((e) => e.json())\r\n        .then((e) => console.log(e.res));\r\n      setCheckClickThumbsUp((pre: boolean) => !pre);\r\n    } else {\r\n      fetch(`https://musicdata.link/subLikes/${music.title}`, {\r\n        method: \"DELETE\",\r\n      })\r\n        .then((e) => e.json())\r\n        .then((e) => console.log(e.res));\r\n      setCheckClickThumbsUp(!checkClickThumbsUp);\r\n    }\r\n    // setplayBarMusicInfor(music);\r\n  }, [music, setCheckClickThumbsUp, checkClickThumbsUp]);\r\n\r\n  const subMenuClickToggleFunc = useCallback(\r\n    (area: string) => {\r\n      if (area === \"inSide\") setOperationActivate((pre) => !pre);\r\n      else if (operationActivate) setOperationActivate(false);\r\n    },\r\n    [setOperationActivate, operationActivate]\r\n  );\r\n\r\n  return (\r\n    <div className=\"music\">\r\n      <div className=\"music-info\">\r\n        <img src={music.albumCover} className=\"music-cover\" />\r\n        <div className=\"music-title\">{music.title}</div>\r\n        <div className=\"music-artist\">{music.artist}</div>\r\n        <div className=\"music-album\">{music.album}</div>\r\n        <div className=\"music-playTime\">\r\n          {Math.floor(music.time / 60)}:{music.time % 60}\r\n        </div>\r\n        <div className=\"music-likes\">{music.likes}</div>\r\n        <div className=\"music-views\">{music.views}</div>\r\n        <i\r\n          style={{ color: music.isLike ? \"white\" : \"black\" }}\r\n          className=\"fas fa-thumbs-up\"\r\n          onClick={handleClick}\r\n        ></i>\r\n        <i\r\n          className=\"fas fa-ellipsis-v list-ellipsis\"\r\n          onClick={() => {\r\n            subMenuClickToggleFunc(\"inSide\");\r\n          }}\r\n        >\r\n          <OnOutsiceClick\r\n            onOutsideClick={() => {\r\n              subMenuClickToggleFunc(\"outSide\");\r\n            }}\r\n          >\r\n            <MusicSubOperation\r\n              music={music}\r\n              setplayBarActivate={setplayBarActivate}\r\n              setplayBarMusicInfor={setplayBarMusicInfor}\r\n              setMusicList={setMusicList}\r\n              operationActivate={operationActivate}\r\n              checkClickLibrary={checkClickLibrary}\r\n              setCheckClickLibrary={setCheckClickLibrary}\r\n            />\r\n          </OnOutsiceClick>\r\n        </i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\n\nimport { Footer } from \"./component/footer/Footer\";\nimport { RankSideBar } from \"./component/sidebar/SideBar\";\nimport { PlayerNav } from \"./component/navbar/navBar\";\nimport { Main } from \"./component/main/main\";\n\nexport interface Music {\n  title: string;\n  artist: string;\n  album: string;\n  albumCover: string;\n  time: number;\n  likes: number;\n  views: number;\n  library: string;\n  genre: string;\n  isLike: boolean;\n}\n\nexport enum SortType {\n  TITLES,\n  ARTISTS,\n  ALBUMS,\n  LIKES,\n  VIEWS,\n}\n\n// 앱 실행\n// 플레이 리스트는 초기에 비어있음\n// 서버에 플레이 리스트 요청\n// 서버의 리스트를 가져와서 플레이 리스트에 적용\n// 플레이 리스트가 변경되었음으로 element가 보임\n\nfunction MusicPlayer({\n  playBarMusicInfor,\n  setplayBarMusicInfor,\n}: {\n  playBarMusicInfor: Music;\n  setplayBarMusicInfor: Function;\n}) {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [sortType, setSortType] = useState<SortType>(SortType.LIKES);\n  const [genreType, setGenreType] = useState(\"\");\n  const [libraryType, setLibraryType] = useState(\"\");\n  const [musicList, setMusicList] = useState<Music[]>([]);\n  const [rankSideBarActivate, setRankSideBarActivate] = useState(false);\n  const [playBarActivate, setplayBarActivate] = useState(false);\n  const [checkClickThumbsUp, setCheckClickThumbsUp] = useState(false);\n\n  const [checkClickLibrary, setCheckClickLibrary] = useState<boolean>(false);\n\n  return (\n    <div id=\"musicPlayer\">\n      <PlayerNav\n        setSearchInput={setSearchInput}\n        setSortType={setSortType}\n        setLibraryType={setLibraryType}\n        setGenreType={setGenreType}\n        setRankSideBarActivate={setRankSideBarActivate}\n      />\n      <div id=\"main-wr\">\n        <RankSideBar\n          setSearchInput={setSearchInput}\n          setSortType={setSortType}\n          setGenreType={setGenreType}\n          rankSideBarActivate={rankSideBarActivate}\n        />\n\n        <Main\n          sortType={sortType}\n          setGenreType={genreType}\n          searchInput={searchInput}\n          libraryType={libraryType}\n          musicList={musicList}\n          setplayBarActivate={setplayBarActivate}\n          setplayBarMusicInfor={setplayBarMusicInfor}\n          setMusicList={setMusicList}\n          checkClickThumbsUp={checkClickThumbsUp}\n          setCheckClickThumbsUp={setCheckClickThumbsUp}\n          checkClickLibrary={checkClickLibrary}\n          setCheckClickLibrary={setCheckClickLibrary}\n        />\n      </div>\n      <Footer\n        playBarActivate={playBarActivate}\n        playBarMusicInfor={playBarMusicInfor}\n        setplayBarMusicInfor={setplayBarMusicInfor}\n        checkClickThumbsUp={checkClickThumbsUp}\n      />\n    </div>\n  );\n}\n\nfunction App() {\n  const [playBarMusicInfor, setplayBarMusicInfor] = useState<Music>({\n    title: \"\",\n    artist: \"\",\n    album: \"\",\n    albumCover: \"https://musicdata.link/images/background.jpg\",\n    time: 0,\n    likes: 0,\n    views: 0,\n    library: \"\",\n    genre: \"\",\n    isLike: false,\n  });\n\n  return (\n    <div id=\"background-wrap\">\n      <div\n        id=\"background\"\n        style={{ backgroundImage: `url(${playBarMusicInfor.albumCover})` }}\n      ></div>\n      <MusicPlayer\n        playBarMusicInfor={playBarMusicInfor}\n        setplayBarMusicInfor={setplayBarMusicInfor}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\r\nimport { Music, SortType } from \"../../App\";\r\nimport { MusicInfor } from \"./musiclist/musicList\";\r\nimport \"./main.css\";\r\n\r\nexport function Main({\r\n  sortType,\r\n  setGenreType,\r\n  searchInput,\r\n  libraryType,\r\n  musicList,\r\n  setplayBarActivate,\r\n  setplayBarMusicInfor,\r\n  setMusicList,\r\n  checkClickThumbsUp,\r\n  setCheckClickThumbsUp,\r\n  checkClickLibrary,\r\n  setCheckClickLibrary,\r\n}: {\r\n  searchInput: string;\r\n  setGenreType: string;\r\n  sortType: SortType;\r\n  libraryType: string;\r\n  musicList: Music[];\r\n  setplayBarActivate: Function;\r\n  setplayBarMusicInfor: Function;\r\n  setMusicList: Function;\r\n  checkClickThumbsUp: boolean;\r\n  setCheckClickThumbsUp: Function;\r\n  checkClickLibrary: boolean;\r\n  setCheckClickLibrary: Function;\r\n}) {\r\n  useEffect(() => {\r\n    fetch(\"https://musicdata.link/\")\r\n      .then((e) => e.json())\r\n      .then((e) => setMusicList(e.res));\r\n  }, [checkClickLibrary]);\r\n\r\n  return (\r\n    <main id=\"player-main\">\r\n      {musicList\r\n        .filter((el) => el.title.includes(searchInput))\r\n        .filter((el) => el.genre.includes(setGenreType))\r\n        .filter((el) => el.library.includes(libraryType))\r\n        .sort((a, b) => {\r\n          switch (sortType) {\r\n            case SortType.ALBUMS:\r\n              return a.album.localeCompare(b.album);\r\n            case SortType.ARTISTS:\r\n              return a.artist.localeCompare(b.artist);\r\n            case SortType.TITLES:\r\n              return a.title.localeCompare(b.title);\r\n            case SortType.LIKES:\r\n              return b.likes - a.likes;\r\n            case SortType.VIEWS:\r\n              return b.views - a.views;\r\n            default:\r\n              return a.album.localeCompare(b.album);\r\n          }\r\n        })\r\n        .map((e) => (\r\n          <MusicInfor\r\n            key={e.title + e.album + e.artist}\r\n            music={e}\r\n            setplayBarActivate={setplayBarActivate}\r\n            setplayBarMusicInfor={setplayBarMusicInfor}\r\n            setMusicList={setMusicList}\r\n            checkClickThumbsUp={checkClickThumbsUp}\r\n            setCheckClickThumbsUp={setCheckClickThumbsUp}\r\n            checkClickLibrary={checkClickLibrary}\r\n            setCheckClickLibrary={setCheckClickLibrary}\r\n          />\r\n        ))}\r\n    </main>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}